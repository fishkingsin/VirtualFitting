package {	import flash.display.MovieClip;	import flash.events.Event;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLRequest;	import flash.net.URLRequestMethod;	import flash.net.URLVariables;	import flash.net.URLLoaderDataFormat;	 import flash.events.*;	public class FacebookLoginExample extends MovieClip	{		public function FacebookLoginExample()		{			//Make a variables variable			var vars:URLVariables = new URLVariables  ;			//set information that is to be POSTed to fb			vars.user = "fishkingsin@gmail.com";			vars.pass = "(fannY1218)";			//connect to facebook api			//"https://www.facebook.com/login.php"			//https://www.facebook.com/login.php?skip_api_login=1&api_key=113869198637480&signed_next=1&next=http%3A%2F%2Fwww.facebook.com%2Fdialog%2Foauth%3Fredirect_uri%3Dhttp%253A%252F%252Fwww.facebook.com%252Fdialog%252Freturn%252Farbiter%253Frelation%253Dopener%2526close%253Dtrue%2523origin%253Dhttp%25253A%25252F%25252Fdevelopers.facebook.com%25252Ff381fa9484%26display%3Dpopup%26scope%26response_type%3Dnone%26client_id%3D113869198637480%26ret%3Dlogin&cancel_uri=http%3A%2F%2Fwww.facebook.com%2Fdialog%2Freturn%2Farbiter%3Frelation%3Dopener%26close%3Dtrue%26protocol%3Dhttp%26response%3D%257B%2522error%2522%253A%2522access_denied%2522%252C%2522error_code%2522%253A200%252C%2522error_description%2522%253A%2522Permissions%2Berror%2522%252C%2522error_reason%2522%253A%2522user_denied%2522%257D%23origin%3Dhttp%253A%252F%252Fdevelopers.facebook.com%252Ff381fa9484&display=popup			var Request:URLRequest = new URLRequest("https://www.facebook.com/login.php");			Request.method = URLRequestMethod.POST;			//add variables			Request.data = vars;			//create a URL loader			var loader:URLLoader = new URLLoader(Request);			//specify what the returned data is			loader.dataFormat = URLLoaderDataFormat.TEXT;			//send it off			configureListeners(loader);			loader.load(Request);					}		        private function configureListeners(dispatcher:IEventDispatcher):void {            dispatcher.addEventListener(Event.COMPLETE, completeHandler);            dispatcher.addEventListener(Event.OPEN, openHandler);            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);        }        private function completeHandler(event:Event):void {            var loader:URLLoader = URLLoader(event.target);            trace("completeHandler: " + loader.data);                var vars:URLVariables = new URLVariables(loader.data);            trace("The answer is " + vars.answer);        }        private function openHandler(event:Event):void {            trace("openHandler: " + event);        }        private function progressHandler(event:ProgressEvent):void {            trace("progressHandler loaded:" + event.bytesLoaded + " total: " + event.bytesTotal);        }        private function securityErrorHandler(event:SecurityErrorEvent):void {            trace("securityErrorHandler: " + event);        }        private function httpStatusHandler(event:HTTPStatusEvent):void {            trace("httpStatusHandler: " + event);        }        private function ioErrorHandler(event:IOErrorEvent):void {            trace("ioErrorHandler: " + event);        }	}}