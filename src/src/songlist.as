package {	import flash.display.MovieClip;	import flash.display.MovieClip;	import flash.display.Stage;	import flash.display.StageAlign;	import flash.display.LoaderInfo;	import flash.events.*;	import flash.system.Capabilities;	import flash.text.TextField;	import flash.ui.Keyboard;	import com.thanksmister.touchlist.renderers.TouchListItemRenderer;	import com.thanksmister.touchlist.events.ListItemEvent;	import com.thanksmister.touchlist.controls.TouchList;	public class songlist extends MovieClip	{		private var touchList:TouchList;		var WIDTH = 1080;		var HEIGHT = 1920;		var song_data:SongData;		var loader:SmoothingBitmapLoader;		public function songlist()		{			// constructor code			loader = new SmoothingBitmapLoader(getFullPath(loaderInfo) +"song_list_item.swf");			loader.addEventListener(SmoothingBitmapLoader.INIT,onLoaded);			addEventListener(SongListEvent.SONG_LIST,onSongList);		}		function onSongList(e:SongListEvent)		{			trace("onSongList ",e.data);		}		function onLoaded(e:Event)		{			e.target.removeEventListener(SmoothingBitmapLoader.INIT,onLoaded);			song_data = new SongData(getFullPath(this.loaderInfo) +"example.csv");			song_data.addEventListener(Event.COMPLETE, function loadComplete(e:Event)			   {			   song_data.removeEventListener(Event.ADDED_TO_STAGE, loadComplete);			if(stage) 			init();			else			stage.addEventListener(Event.ADDED_TO_STAGE, init);   			   });		}		private function init(e:Event = null):void		{			stage.removeEventListener(Event.ADDED_TO_STAGE, init);			touchList = new TouchList(WIDTH,HEIGHT);			touchList.addEventListener(ListItemEvent.ITEM_SELECTED, handlelistItemSelected);			addChild(touchList);			// Fill our list with item rendreres that extend ITouchListRenderer. 			for (var i:int = 0; i < song_data.loadedData.length; i++)			{				var item:MyTouchListItemRenderer = new MyTouchListItemRenderer(song_data.loadedData[i].SONG_NAME,				   song_data.loadedData[i].ARTIST,				   song_data.loadedData[i].COVER);				item.index = i;				item.data = "This is list item " + String(i);				item.itemHeight = 80;				item.drawListItem(loader);				touchList.addListItem(item);			}		}		private function handlelistItemSelected(e:ListItemEvent):void		{			trace("List item pressed: " + e.renderer.index);			dispatchEvent(new SongListEvent(SongListEvent.SONG_LIST, song_data.loadedData[e.renderer.index].FILE));		}		function getFullPath(loaderInfo:LoaderInfo):String		{			var myObsolutePath:String;			var myRelativePath:String;			trace(loaderInfo.url);			myObsolutePath = loaderInfo.url;			var stringStart:Number = 0;			var stringEnd:Number = myObsolutePath.lastIndexOf("/") + 1;			myRelativePath = myObsolutePath.slice(stringStart,stringEnd);			return myRelativePath;		}	}}